/*
 * =========================================================================================
 * Copyright Â© 2013-2018 the kamon project <http://kamon.io/>
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 * =========================================================================================
 */

buildscript {
    ext.scala_version = '2.12.11'
    ext.agent_version = project(":agent").version
    ext.kamon_agent_dep = "io.kamon:kanela-agent:${agent_version}"

    repositories {
        mavenCentral()
    }
}


allprojects {
    apply plugin: 'java'

    configurations {
        provided
        agent
    }

    sourceSets {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        implementation 'io.vavr:vavr:0.10.4'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'

        agent(kamon_agent_dep)
    }

    tasks.withType(Javadoc) {
        if (JavaVersion.current().isJava11Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set("javadoc")
        from javadoc.destinationDir
    }
}
